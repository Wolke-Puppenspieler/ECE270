#pragma once
#include <iostream>
#include <string>
#include "ofMain.h"

struct Pokemon{
	int idNum;		//the pokemon's index number referring to its species
	string name;	//the pokemon's species name
	int baseHP;     //base Health Point stat
	int baseAtk;    //base Attack stat
	int baseDef;    //base Defense stat
	int baseSpd;    //base Speed stat
	int baseSpec;   //base Special stat
	int type1;      //first elemental type
	int type2;      //second elemental type
	int evoLvl;     //level at which pokemon evolves (00 if pokemon does not evolve)
	int expClass;   //which level/experience ratio to use to determine pokemon level
	int baseExp;	//base exp yield upon defeat
};
//----------------------------Incomplete parts of the battling system----------------------------//
/*struct Move{};
        int power;
        char name[11];
    public:
        Move(Effect effect_in, int pow_in, string name_in);
        Move();
        void setMove(Effect effect_in, int pow_in, string name_in);
        void setMove();
};

class Attack{
    private:
        int damageType;  // Grass, water, fire,etc
        int attackType;  // Physical/special
        int attackGroup; // Damage, drain, lower stat, etc
    public:
       Attack()
};
*/
//part of the battle system, one of the building blocks of the attacks
//attacks have several major components: type of damage (physical/special), element (water, fire, ice, etc.), effect (drain opponent's health, lower their attack, damage their health, etc.)
class Effect{
    private:
        int index;
        int damage;
        int heal;
        int atk;
        int def;
        int spd;
        int spec;
};

class BattlePoke{
    private:
        int maxHP; //maximum health at current level
        int atkStat; //attack stat at current level
        int defStat; //defense stat at current level
        int spdStat; //speed stat at current level
        int specStat; //special stat at current level
        int move1; //attack 1
        int move2; //attack 2
        int move3; //attack 3
        int move4; //attack 4
        int exp; //total exp earned by this pokemon
        int level; //pokemon's current level
    public:
        int idNum;
        int hp; //current hp
        int atk; //current attack
        int def; //current defense
        int spd; //current speed
        int spec; //current special
        int faint;//1 if pokemon is knocked out | 0 if pokemon is currently able to battle
        int isWild; //1 if pokemon is wild | 0 trainer owned
        BattlePoke(struct Pokemon pokemon, int level_in); //generate a battleable pokemon
        BattlePoke(); //lazy constructor
        void genWild(struct Pokemon pokemon, int level_in); //generate a pokemon to battle
		void evolve(); //evolve pokemon if it reaches the appropriate level
        //void learnMove(Move newMove);
        void battle(BattlePoke opponent); //battle event vs other pokemon
};

class Trainer{
    private:
        string startBattle;
        string winMessage;
    public:
        BattlePoke party[6];
        int isBattling=0;
        Trainer(struct Pokemon starter); //initialize trainer with single pokemon
        Trainer(struct Pokemon team[6],int levels[6]); //initialize trainer with party
        Trainer();
        void catchPoke(BattlePoke encounter);
        void trainerBattle(Trainer opponent);
        void battle(BattlePoke wildPoke);
};



class ofApp : public ofBaseApp{

	public:
	    FILE *fp;
		void setup();
		void update();
		void draw();

		void keyPressed(int key);
		void keyReleased(int key);
		void mouseMoved(int x, int y );
		void mouseDragged(int x, int y, int button);
		void mousePressed(int x, int y, int button);
		void mouseReleased(int x, int y, int button);
		void windowResized(int w, int h);
		void dragEvent(ofDragInfo dragInfo);
		void gotMessage(ofMessage msg);
		void wildEncounter(int idNum,int level);

		ofImage player; //player's sprite
		ofImage currentMap; //map sprite
		ofImage playerPoke; //would display the back of the pokemon you are currently using in battle
		ofImage enemyPoke; //would display the front sprite of the pokemon you are battling against
		ofSoundPlayer bgMusic; //background music
		ofTrueTypeFont gameText; //to be used in rendering the battle screen
		BattlePoke wild; //wild pokemon object to be populated when a wild pokemon is encountered
		int i,j,k,m=2,inBattle=0;
        Trainer player1; //data structure for player - contains current pokemon team
        string maps[11]={"NULL","NULL","pallet.bmp","moms1f.png","moms2f.png","oakslab.png","route1.png","viridianCity.png","viridianForest.png","route2.png","battle.png"}; //array of map filenames
		char lastKey;

//---------------------------------Wild Pokemon--------------------------------------//
        //denotes the types of pokemon that may appear on a given map
		int pallet[4]={1,4,7,25};
        int route1[2]={16,19};
        int viridian[6]={10,11,13,14,21,25};

//---------------------------------Pathing Maps--------------------------------------//
//0 = walkable | 1 = non-walkable | -1 = Walkable w/ chance of wild pokemon encounter (corresponds to grassy cells on map sprites) | Any number > 1 corresponds to the next map that must be loaded 

		//Pallet Town
		int map1[24][27]={
		    {1,1,1,1,1,1,1,1,1,1,1,1,1,6,6,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,1,1,2,1,1,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,5,1,1,1,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
            {1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
            {1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
        };

        //Ash's House (lower floor)
        int map1a1[8][8]={
            {1,1,1,1,1,1,1,1},
			{1,1,0,1,0,0,0,4},
			{0,0,0,0,0,0,0,0},
			{0,0,0,1,1,0,0,0},
			{0,0,0,1,1,0,0,0},
			{0,0,0,0,0,0,0,0},
			{1,0,0,0,0,0,0,1},
			{1,0,3,3,0,0,0,1}
        };

        //Ash's House (upper Floor)
        int map1a2[8][8]={
            {1,1,1,1,1,1,1,1},
			{1,1,1,0,0,0,0,3},
			{0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0},
			{0,0,0,1,0,0,0,0},
			{0,0,0,1,0,0,0,0},
			{1,0,0,0,0,0,1,0},
			{1,0,0,0,0,0,1,0}
        };

        //Gary's House
        int map1b[8][8]={
            {1,1,1,1,1,1,1,1},
			{1,1,0,0,0,0,0,1},
			{0,0,0,0,0,0,0,0},
			{0,0,0,1,1,0,0,0},
			{0,0,0,1,1,0,0,0},
			{0,0,0,0,0,0,0,0},
			{1,0,0,0,0,0,0,1},
			{1,0,3,3,0,0,0,1}
        };

        //Oak's Lab
        int map1c[12][12]={
 			{1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,0,0,1,1,1,1},
			{0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,1,1,1},
			{0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0},
			{1,1,1,1,0,0,1,1,1,1},
			{1,1,1,1,0,0,1,1,1,1},
			{0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,3,3,0,0,0,0}
        };

        //Route 1
        int map2[40][23]={
            {1,1,1,1,1,1,1,1,1,1,7,7,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,1,1,1},
			{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
			{1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,0,0,-1,-1,-1,-1,0,0,0,0,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,0,0,-1,-1,-1,-1,0,0,0,0,-1,-1,-1,-1,1,1,1,1,1},
			{1,1,1,1,-1,-1,-1,-1,0,0,0,0,-1,-1,-1,-1,0,0,1,1,1,1,1},
			{1,1,1,1,-1,-1,-1,-1,0,0,0,0,-1,-1,-1,-1,0,0,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1}
        };

        //Viridian City
        int map3[31][34]={
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1},
			{1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1},
			{1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1},
			{1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1},
			{1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,2,2,2,2,2,2,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
        };

        //Viridian Forest
        int map4[48][34]={
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1},
			{1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1},
			{1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,0,0,1,1,1,-1,-1,-1,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,0,0,1,1,1,-1,-1,-1,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,0,0,1,1,1,-1,-1,-1,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,0,0,1,1,1,-1,-1,-1,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,0,0,1,1,1,-1,-1,-1,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,0,0,1,1,1,-1,-1,-1,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,0,0,-1,-1,-1,1,1,1,1,1,1,0,0,1,1,1,-1,-1,-1,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,0,0,-1,-1,-1,1,1,1,1,1,1,0,1,1,1,1,-1,-1,-1,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,-1,-1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,-1,-1,-1,0,0,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,-1,-1,-1,0,0,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,0,0,1},
			{1,1,1,1,1,1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,1,0,-1,1,1,1,1,1,1,-1,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,1,1,1,1,1,1,-1,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,1,0,0,-1,1,1,1,1,1,1,-1,0,0,-1,1,1,1,1,1,1,-1,0,0,1,1,1,1,1,1},
			{1,1,1,1,1,1,0,0,-1,1,1,1,1,1,1,-1,0,0,-1,1,1,1,1,1,1,-1,0,0,1,1,1,1,1,1},
			{1,1,1,1,1,1,0,0,-1,1,1,1,1,1,1,-1,0,0,-1,1,1,1,1,1,1,-1,0,0,1,1,1,1,1,1},
			{1,1,1,1,1,1,0,0,-1,1,1,1,1,1,1,-1,0,0,-1,1,1,1,1,1,1,-1,0,0,1,1,1,1,1,1},
			{1,1,1,1,1,1,0,0,-1,1,1,1,1,1,1,-1,0,0,-1,1,1,1,1,1,1,-1,0,0,1,1,1,1,1,1},
			{1,1,1,1,1,1,0,0,-1,1,1,1,1,1,1,-1,0,0,-1,1,1,1,1,1,1,-1,0,0,1,1,1,1,1,1},
			{1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,1,-1,0,0,-1,-1,-1,-1,-1,1},
			{1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,1},
			{1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,1},
			{1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,7,7,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
    };

};

